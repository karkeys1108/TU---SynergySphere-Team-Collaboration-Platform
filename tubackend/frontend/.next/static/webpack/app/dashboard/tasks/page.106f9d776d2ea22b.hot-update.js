"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/tasks/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; }\n/* harmony export */ });\nconst API_BASE_URL = \"http://localhost:5000/api\" || 0;\nclass ApiClient {\n    initializeToken() {\n        if (true) {\n            this.token = localStorage.getItem(\"token\");\n        }\n    }\n    setToken(token) {\n        this.token = token;\n        if (true) {\n            localStorage.setItem(\"token\", token);\n        }\n    }\n    removeToken() {\n        this.token = null;\n        if (true) {\n            localStorage.removeItem(\"token\");\n        }\n    }\n    async request(endpoint) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        // Ensure token is up to date\n        this.initializeToken();\n        const url = \"\".concat(this.baseURL).concat(endpoint);\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            ...options.headers\n        };\n        // Add auth header if token exists\n        if (this.token) {\n            headers[\"Authorization\"] = \"Bearer \".concat(this.token);\n        }\n        try {\n            const response = await fetch(url, {\n                ...options,\n                headers,\n                credentials: \"include\"\n            });\n            // Handle 401 Unauthorized\n            if (response.status === 401) {\n                this.removeToken();\n                window.location.href = \"/auth/login\";\n                return {\n                    success: false,\n                    error: \"Session expired. Please log in again.\"\n                };\n            }\n            const data = await response.json().catch(()=>({}));\n            if (!response.ok) {\n                return {\n                    success: false,\n                    error: data.message || \"An error occurred\",\n                    ...data\n                };\n            }\n            return {\n                success: true,\n                data,\n                ...data\n            };\n        } catch (error) {\n            console.error(\"API Request Error:\", error);\n            return {\n                success: false,\n                error: error instanceof Error ? error.message : \"Network error\"\n            };\n        }\n    }\n    // Auth endpoints\n    async login(email, password) {\n        var _response_data;\n        const response = await this.request(\"/auth/login\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                email,\n                password\n            })\n        });\n        if (response.success && ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.token)) {\n            this.setToken(response.data.token);\n        }\n        return response;\n    }\n    async register(userData) {\n        var _response_data;\n        const response = await this.request(\"/auth/register\", {\n            method: \"POST\",\n            body: JSON.stringify(userData)\n        });\n        if (response.success && ((_response_data = response.data) === null || _response_data === void 0 ? void 0 : _response_data.token)) {\n            this.setToken(response.data.token);\n        }\n        return response;\n    }\n    async getProfile() {\n        return this.request(\"/auth/profile\");\n    }\n    async updateProfile(userData) {\n        return this.request(\"/auth/profile\", {\n            method: \"PUT\",\n            body: JSON.stringify(userData)\n        });\n    }\n    // Project endpoints\n    async getProjects() {\n        return this.request(\"/projects\");\n    }\n    async createProject(projectData) {\n        return this.request(\"/projects\", {\n            method: \"POST\",\n            body: JSON.stringify(projectData)\n        });\n    }\n    async getProject(id) {\n        return this.request(\"/projects/\".concat(id));\n    }\n    async updateProject(id, projectData) {\n        return this.request(\"/projects/\".concat(id), {\n            method: \"PUT\",\n            body: JSON.stringify(projectData)\n        });\n    }\n    async deleteProject(id) {\n        return this.request(\"/projects/\".concat(id), {\n            method: \"DELETE\"\n        });\n    }\n    // Task endpoints\n    async getTasks(projectId) {\n        const endpoint = projectId ? \"/tasks?project=\".concat(projectId) : \"/tasks\";\n        return this.request(endpoint);\n    }\n    async createTask(taskData) {\n        return this.request(\"/tasks\", {\n            method: \"POST\",\n            body: JSON.stringify(taskData)\n        });\n    }\n    async updateTask(id, taskData) {\n        return this.request(\"/tasks/\".concat(id), {\n            method: \"PUT\",\n            body: JSON.stringify(taskData)\n        });\n    }\n    async deleteTask(id) {\n        return this.request(\"/tasks/\".concat(id), {\n            method: \"DELETE\"\n        });\n    }\n    // Message endpoints\n    async getMessages(projectId) {\n        return this.request(\"/messages?project=\".concat(projectId));\n    }\n    async sendMessage(messageData) {\n        return this.request(\"/messages\", {\n            method: \"POST\",\n            body: JSON.stringify(messageData)\n        });\n    }\n    async updateMessage(id, messageData) {\n        return this.request(\"/messages/\".concat(id), {\n            method: \"PUT\",\n            body: JSON.stringify(messageData)\n        });\n    }\n    async deleteMessage(id) {\n        return this.request(\"/messages/\".concat(id), {\n            method: \"DELETE\"\n        });\n    }\n    async likeMessage(id) {\n        return this.request(\"/messages/\".concat(id, \"/like\"), {\n            method: \"POST\"\n        });\n    }\n    async pinMessage(id) {\n        return this.request(\"/messages/\".concat(id, \"/pin\"), {\n            method: \"POST\"\n        });\n    }\n    // Notification endpoints\n    async getNotifications() {\n        return this.request(\"/notifications\");\n    }\n    async markNotificationRead(id) {\n        return this.request(\"/notifications/\".concat(id, \"/read\"), {\n            method: \"PUT\"\n        });\n    }\n    constructor(baseURL){\n        this.token = null;\n        this.baseURL = baseURL;\n        this.initializeToken();\n    }\n}\nconst apiClient = new ApiClient(API_BASE_URL);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});